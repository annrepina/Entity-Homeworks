// <auto-generated />
using System;
using EFCoreHomework2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreHomework2.Migrations
{
    [DbContext(typeof(GroupDbContext))]
    [Migration("20221128171511_Initializing")]
    partial class Initializing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreHomework2.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("StudentCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PhoneNumber");

                    b.HasIndex("StudentCardId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EFCoreHomework2.Entities.StudentCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("SerialNumber");

                    b.ToTable("StudentCards");
                });

            modelBuilder.Entity("EFCoreHomework2.Entities.Student", b =>
                {
                    b.HasOne("EFCoreHomework2.Entities.StudentCard", "StudentCard")
                        .WithOne("Student")
                        .HasForeignKey("EFCoreHomework2.Entities.Student", "StudentCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentCard");
                });

            modelBuilder.Entity("EFCoreHomework2.Entities.StudentCard", b =>
                {
                    b.Navigation("Student")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
